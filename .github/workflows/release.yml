# Nama workflow untuk proses rilis lengkap
name: Publish Docker Image and Create Release

on:
  push:
    tags:
    - 'v*'

jobs:
  # Nama job yang jelas
  publish-and-release:
    name: Publish and Release
    runs-on: ubuntu-latest
    permissions:
      # 'contents: write' untuk membuat rilis
      contents: write
      # 'packages: write' untuk push image ke GHCR
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Langkah 1: Login ke GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        # GITHUB_TOKEN memiliki izin yang kita setel di atas
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Langkah 2: Ekstrak metadata (tag dan label) untuk Docker image
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        # Nama image akan menjadi ghcr.io/<owner>/<repo>
        images: ghcr.io/${{ github.repository }}
        # Ini akan secara otomatis membuat tag Docker yang berguna:
        # - v1.2.3 -> :1.2.3, :1.2, :1, :latest
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=edge,branch=main
          type=ref,event=branch

    # Langkah 3: Setup build environment untuk Docker
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Langkah 4: Build dan Push image Docker
    # Ini adalah bagian yang hilang dari workflow sebelumnya
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: .
        # Gunakan Dockerfile dari root direktori service ini
        file: ./Dockerfile
        # Push ke registry setelah build berhasil
        push: true
        # Gunakan tag dan label yang dihasilkan oleh langkah 'meta'
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Langkah 5: Buat Rilis GitHub (menggunakan action yang lebih canggih)
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        # Secara otomatis membuat catatan rilis yang rapi dari PR
        generate_release_notes: true
        # Anda tidak perlu menyertakan file binary di sini karena fokus kita
        # sekarang adalah image Docker. Namun, jika Anda mau, Anda bisa
        # menambahkan langkah build dan mengunggahnya di 'files:'.
