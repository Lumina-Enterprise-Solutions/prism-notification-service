# Nama workflow untuk proses rilis
name: Create Release and Publish Assets

# Pemicu: Hanya berjalan saat ada tag baru yang di-push dengan format v* (e.g., v1.2.3)
on:
  push:
    tags:
    - 'v*'

jobs:
  # Nama job bisa lebih deskriptif
  build-and-release:
    name: Build, Package, and Release
    runs-on: ubuntu-latest
    permissions:
      # 'contents: write' diperlukan untuk membuat rilis
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    # Langkah ini tetap sama, mengambil versi dari tag
    - name: Get Release Version from Tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Build Go binary for Linux
      run: |
        # Mengatur variabel lingkungan untuk cross-compilation jika diperlukan
        # -ldflags="-w -s" adalah praktik terbaik untuk mengecilkan ukuran binary rilis
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o prism-notification-service .

    - name: Create archive of the binary
      run: |
        # Membuat arsip tar.gz yang umum digunakan di lingkungan Linux
        tar -czvf prism-notification-service-${{ env.VERSION }}-linux-amd64.tar.gz prism-notification-service

        # Opsional: Buat juga arsip .zip jika target Anda termasuk Windows
        # zip prism-notification-service-${{ env.VERSION }}-linux-amd64.zip prism-notification-service

    - name: Create GitHub Release and Upload Assets
      # MENGGANTI: Gunakan action yang lebih modern dan kaya fitur
      uses: softprops/action-gh-release@v2
      with:
        # Action ini akan secara otomatis menggunakan tag yang memicu workflow (GITHUB_REF)
        # Nama rilis akan sama dengan nama tag (e.g., "v1.0.0")

        # PENTING: Fitur ini secara otomatis membuat body rilis yang indah
        # berdasarkan PR yang telah di-merge. Ini menggantikan body statis Anda.
        # Anda bisa menambahkan file .github/release.yml untuk mengkustomisasi formatnya.
        generate_release_notes: true

        # Daftar file yang akan diunggah sebagai aset rilis.
        # Tanda bintang (*) adalah wildcard.
        files: |
          ./*.tar.gz
          ./*.zip
